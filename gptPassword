In the "ParolaSifirlamaController" class, add a method to generate a password reset token and send it to the user's email address:
Copy code
@PostMapping("/forgotpassword")
public ResponseEntity<?> forgotPassword(@RequestParam("email") String email) {
    User user = userService.findByEmail(email);
    if (user == null) {
        return new ResponseEntity<>("Invalid email address.", HttpStatus.BAD_REQUEST);
    }
    String token = parolaSifirlamaService.createPasswordResetToken(user);
    emailSenderService.sendSimpleEmail(email, "Password reset request", "Reset your password by clicking on this link: " + "http://localhost:8080/api/reset/resetpassword?token=" + token);
    return new ResponseEntity<>("Password reset link sent to your email address.", HttpStatus.OK);
}
In the "ParolaSifirlamaController" class, add a validation of the token and user's identity before updating the password:
Copy code
@PostMapping("/resetpassword")
public ResponseEntity<?> resetPassword(@RequestParam("token") String token, @RequestParam("password") String password){
    User user = userService.findUserByResetToken(token);
    if(user == null){
        return new ResponseEntity<>("Invalid token", HttpStatus.BAD_REQUEST);
    }
    parolaSifirlamaService.updatePassword(user,password);
    return new ResponseEntity<>("Password reset successfully", HttpStatus.OK);
}
In the "ParolaSifirlamaService" class, add a method to update the user's password in the database after validating the token and user's identity in the controller:
Copy code
 public void updatePassword(User user, String password) {
        user.setPassword(passwordEncoder.encode(password));
        user.setResetToken(null);
        userRepository.save(user);
    }
In the "



lkinaci22@gmail.com
devamÄ±
"ParolaSifirlamaService" class, add a method to confirm the password reset process was successful and inform the user.

Copy code
 public void confirmPasswordReset(User user) {
        emailSenderService.sendSimpleEmail(user.getEmail(), "Password reset confirmation", "Your password has been successfully reset.");
    }
And in the "ParolaSifirlamaController" you can add a call to this method after the updatePassword method:

Copy code
parolaSifirlamaService.updatePassword(user,password);
parolaSifirlamaService.confirmPasswordReset(user);
return new ResponseEntity<>("Password reset successfully", HttpStatus.OK);
